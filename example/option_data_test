#!/usr/bin/env ruby
#
# This script subscribes to market data for a list of Options
### not adapted to IB::Gateway
require 'rubygems'
require 'bundler/setup'
$LOAD_PATH.unshift File.expand_path(File.dirname(__FILE__) + '/../lib')
require 'ib-ruby'
require 'yaml'

## Adjust !!
EXPIRY= '201506' # valid for contracts with monthly option executions


# First, connect to IB TWS. Arbitrary :client_id is used to identify the script
# Marketdata subscriptions are nessesary
# data are only queried, thus  a  tws used for real trading is safe
TWS= 'beta:7496' # or 'localhost'  
# We ignore logged output.
# If something goes wrong just delete the logger argument
IB::Gateway.new host: TWS , connect:true, logger: Logger.new("/dev/null")
if ( ib = IB::Gateway.tws).present?
# Definition of what we want market data for. 
# First we define an array of general option-descriptions
# In a second step we validate the contract.
# For each verified contract a hash-entry is created which will be later subject to a market-data-subscription

  options = [IB::Option.new( symbol: 'RRD', strike: 20, expiry: EXPIRY, right: :put),
	     IB::Option.new( symbol: 'Z',   strike: 50, expiry: EXPIRY, right: :put, exchange: 'SMART'),
	     IB::Option.new( symbol: 'SPY', strike: 75, expiry: EXPIRY, right: :call, exchange: 'SMART'), # all ( 4 or 5 weekly) call- contracts in the EXPIRY-Month
#	     IB::Option.new( symbol: 'SPY', strike: 100, expiry: '2016',  exchange: 'SMART'),   # all available contracts (put+call) in 2016 
#	     IB::Option.new( symbol: 'DPW', expiry: EXPIRY, currency:'EUR', right: :put, exchange: 'DTB' ), # load the option-chain
	     IB::Option.new( symbol: 'BEI', strike: 80, expiry: EXPIRY, currency:'EUR', right: :put, exchange: 'DTB' )
  ]

  market = Hash.new
  options.each do |x| 
    x.verify do |contract| 
      market[rand(999)] = contract
      puts "Added Contract #{contract.to_human} "
    end
  end
  puts "\nContracts defined"
  puts "\n******** Press <Enter> to subscribe to market-data *********\n\n"
  STDIN.gets


  # simplify things by defining some lambda's
  outstr= ->( item ) { if item.nil? then "--" else  sprintf("%g" , item)  end }
  print_tickoption= ->( msg) do
	    puts "impl.Vola: #{ outstr[ msg.implied_volatility ]} \t dividend: #{ outstr[ msg.pv_dividend ]}  " 
	    puts "\t\tGreeks\t delta:  #{  outstr[ msg.delta ] } \t gamma: #{ outstr[ msg.gamma ]} \t vega: #{ outstr[ msg.vega ] } \t theta:  #{ outstr[ msg.theta ] }" 
  end
  # Subscribe to Ticker... events.  The code passed in the block will be executed when
  # any message of that type is received, with the received message as its argument.
  # In this case, we just print out the tick.
  #

  ib.subscribe(:TickPrice, :TickSize, :TickOption, :TickString) do |msg|
     case msg
         # when IB::Messages::Incoming::TickOption
#	    unless msg.implied_volatility.nil?
#	      print_tickoption[msg]
	  #  else
#	      puts ""
	  #  end
          when IB::Messages::Incoming::TickSize
     print  "#{msg.created_at.strftime("%d.%m.(%X)")}: #{market[msg.ticker_id].local_symbol} \t"
	    puts msg.to_human
#	  end
     end
  end

  # Now we actually request market data for the symbols we're interested in.
  market.each_pair do |id, contract|
      ib.send_message :RequestMarketData, :ticker_id => id, :contract => contract
  end

  puts "\nSubscribed to market data"
  puts "\n******** Press <Enter> to cancel... *********\n\n"
  STDIN.gets
  puts "Cancelling market data subscription.."

  market.each_pair { |id, contract| ib.send_message :CancelMarketData, :id => id }
end

=begin
Expected output
Added Contract <Option: RRD 20150619 put 20.0 SMART USD> 
Added Contract <Option: Z 20150619 put 50.0 SMART USD> 
Added Contract <Option: SPY 20150630 call 75.0 SMART USD> 
Added Contract <Option: SPY 20151218 call 100.0 SMART USD> 
Added Contract <Option: SPY 20151218 put 100.0 SMART USD> 
Added Contract <Option: SPY 20150619 call 100.0 SMART USD> 
Added Contract <Option: SPY 20150619 put 100.0 SMART USD> 
Added Contract <Option: SPY 20150619 call 100.0 SMART USD> 
Added Contract <Option: SPY 20150619 put 100.0 SMART USD> 
Added Contract <Option: SPY 20160115 call 100.0 SMART USD> 
Added Contract <Option: SPY 20160115 put 100.0 SMART USD> 
Added Contract <Option: SPY 20161216 call 100.0 SMART USD> 
Added Contract <Option: SPY 20161216 put 100.0 SMART USD> 
Added Contract <Option: SPY 20161216 call 100.0 SMART USD> 
Added Contract <Option: SPY 20161216 put 100.0 SMART USD> 
Added Contract <Option: SPY 20160617 call 100.0 SMART USD> 
Added Contract <Option: SPY 20160617 put 100.0 SMART USD> 
Added Contract <Option: SPY 20150918 call 100.0 SMART USD> 
(...)
Added Contract <Option: DPW 20150619 put 12.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 14.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 16.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 18.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 20.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 24.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 28.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 32.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 36.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 40.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 44.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 22.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 19.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 26.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 30.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 34.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 25.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 17.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 38.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 21.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 23.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 27.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 29.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 31.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 33.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 35.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 19.5 DTB EUR> 
Added Contract <Option: DPW 20150619 put 37.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 39.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 41.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 18.5 DTB EUR> 
Added Contract <Option: DPW 20150619 put 42.0 DTB EUR> 
Added Contract <Option: DPW 20150619 put 43.0 DTB EUR> 
Added Contract <Option: BEI 20150619 put 80.0 DTB EUR> 
Contracts defined

******** Press <Enter> to subscribe to market-data *********

Subscribed to market data
11.05.(10:03:29): P DPW  JUN 15  2900  impl.Vola: 0.273786	 dividend: 0.850096  
  Greeks   delta:  -0.500798   gamma: 0.155233   vega: 0.0376639   theta:  -0.0134041
11.05.(10:03:29): P DPW  JUN 15  2900   <TickPrice close_price: price 1.0, size 0, can_auto_execute 0 >
11.05.(10:03:29): P DPW  JUN 15  2900   <TickPrice bid_price: price 1.07, size 50, can_auto_execute 1 >
11.05.(10:03:29): P DPW  JUN 15  2900   <TickPrice ask_price: price 1.1, size 50, can_auto_execute 1 >
11.05.(10:03:29): P DPW  JUN 15  2900   <TickSize bid_size: size 50 >
11.05.(10:03:29): P DPW  JUN 15  2900   <TickSize ask_size: size 50 >
11.05.(10:03:29): RRD   150619P00020000	<TickPrice close_price: price 2.4, size 0, can_auto_execute 0 >
11.05.(10:03:29): RRD   150619P00020000	<TickPrice bid_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): RRD   150619P00020000	<TickPrice ask_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): SPY   150619C00075000	<TickPrice close_price: price 136.39, size 0, can_auto_execute 0 >
11.05.(10:03:29): Z     150619P00050000	<TickPrice close_price: price 0.0, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   150630C00075000	<TickPrice close_price: price 136.39, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   150619C00075000	<TickPrice bid_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): SPY   150619C00075000	<TickPrice ask_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): Z     150619P00050000	<TickPrice bid_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): Z     150619P00050000	<TickPrice ask_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): SPY   150630C00075000	<TickPrice bid_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): SPY   150630C00075000	<TickPrice ask_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): P DPW  JUN 15  2900   <TickPrice open_tick: price 1.13, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   160617P00100000	<TickPrice close_price: price 0.38, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY7  150619P00100000	<TickPrice close_price: price 0.0, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   160115P00100000	<TickPrice close_price: price 0.09, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   160115C00100000	<TickPrice close_price: price 111.42, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   151219C00100000	<TickPrice close_price: price 111.4, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY7  161216P00100000	<TickPrice close_price: price 0.0, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   160617C00100000	<TickPrice close_price: price 111.43, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY7  150619C00100000	<TickPrice close_price: price 111.34, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   161216P00100000	<TickPrice close_price: price 0.83, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   151219P00100000	<TickPrice close_price: price 0.07, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   150619C00100000	<TickPrice close_price: price 111.39, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   150619P00100000	<TickPrice close_price: price 0.0, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY7  161216C00100000	<TickPrice close_price: price 111.36, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   161216C00100000	<TickPrice close_price: price 111.43, size 0, can_auto_execute 0 >
11.05.(10:03:29): SPY   160617P00100000	<TickPrice bid_price: price -1.0, size 0, can_auto_execute 1 >
(..)
11.05.(10:03:29): SPY   170317P00100000	<TickPrice bid_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): SPY   170317P00100000	<TickPrice ask_price: price -1.0, size 0, can_auto_execute 1 >
11.05.(10:03:29): P DPW  JUN 15  2900   impl.Vola: 0.267257    dividend: 0.850096  
	  Greeks   delta:  -0.500121   gamma: 0.159018	 vega: 0.0376721   theta:  -0.013095
11.05.(10:03:29): P DPW  JUN 15  2900	  impl.Vola: 0.267257	 dividend: 0.850096  
	  Greeks   delta:  -0.500121   gamma: 0.159018   vega: 0.0376721   theta:  -0.013095
11.05.(10:03:29): P DPW  JUN 15  2900   impl.Vola: 0.27522   dividend: 0.850096  
	  Greeks   delta:  -0.499092   gamma: 0.154435	 vega: 0.0376701   theta:  -0.0134837
11.05.(10:03:29): P DPW  JUN 15  2900	  
11.05.(10:03:30): P DPW  JUN 15  2900	  impl.Vola: 0.267257	 dividend: 0.850096  
	  Greeks   delta:  -0.502463   gamma: 0.159005   vega: 0.0376616   theta:  -0.0130809
11.05.(10:03:30): P DPW  JUN 15  2900   impl.Vola: 0.265106    dividend: 0.850096  
          Greeks   delta:  -0.502765   gamma: 0.160288	 vega: 0.0376622   theta:  -0.012976
11.05.(10:03:30): P DPW  JUN 15  2900	  impl.Vola: 0.273072	 dividend: 0.850096  
	  Greeks   delta:  -0.501658   gamma: 0.155635   vega: 0.0376602   theta:  -0.0133647
11.05.(10:03:30): P DPW  JUN 15  2900   
11.05.(10:03:32): SPY   160115P00100000	<TickSize last_size: size 0 >
11.05.(10:03:32): SPY   160115P00100000	<TickString last_timestamp: value 0 >
11.05.(10:03:32): SPY   161216P00100000	<TickSize last_size: size 0 >
11.05.(10:03:32): SPY   161216P00100000	<TickString last_timestamp: value 0 >
11.05.(10:03:32): SPY   171215C00100000	<TickSize last_size: size 0 >
11.05.(10:03:32): SPY   171215C00100000	<TickString last_timestamp: value 0 >
11.05.(10:03:32): SPY   171215P00100000	<TickSize last_size: size 0 >
11.05.(10:03:32): SPY   171215P00100000	<TickString last_timestamp: value 0 >

******* Press <Enter> to cancel... *********
=end
